package main

import (
	"fmt"
)

func main() {
	// объявляем слайс неотсортированных чисел
	array := []int{24, 234, 23, 2, 6, 2, 1, 54, 12, 1, 0, 7, 4324, 23, 42, 34, 4, 0}

	fmt.Println(array)

	// вызываем функцию быстрой сортировки,
	// передавая ей на вход слайс, его первый индекс и последний
	quicksort(array, 0, len(array)-1)

	fmt.Println(array)

}

func quicksort(array []int, left, right int) {
	// проверяем, чтобы левый индекс не был больше правого
	if left > right {
		return
	}

	// объявляем опорным элементом правый
	pivot := right

	// объявляем стеной левый элемент
	wall := left

	// запускаем цикл, в котором перебираем слайс с числами,
	// а начинаем с левого индекса, его объявляем текущим:
	// условие выхода - когда текущий индекс достигнет правого индекса;
	for current := left; current < right; current++ {
		// проверяем, если элемент с индексом i меньше, чем опорный элемент,
		if array[current] < array[pivot] {
			// то меняем его местами со стеной
			array[wall], array[current] = array[current], array[wall]
			// и двигаем стену на один элемент вправо
			wall++
		}
	}
	// после выхода из цикла
	// меняем местами опорный элемент и стену
	array[wall], array[pivot] = array[pivot], array[wall]

	// запускаем рекурсию,
	// передавая функции на вход слайс
	// и левый индекс,
	// а в качестве правого индекса передаем стену, сдвинутую на один элемент влево
	quicksort(array, left, wall-1)
	// после выхода из функции вызываем рекурсию снова,
	// передавая на вход слайс,
	// в качестве левого элемента передаем стену, сдвинутую на один элемент вправо,
	// и правый индекс
	quicksort(array, wall+1, right)
}
